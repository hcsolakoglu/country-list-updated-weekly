name: Weekly Country Data Update

on:
  schedule:
    # Run weekly on Monday at 00:00 UTC
    - cron: '0 0 * * 1'
  workflow_dispatch:  # Allow manual trigger

# Permissions needed for the workflow
permissions:
  contents: write    # Needed to create commits
  issues: write      # Needed to create issues

jobs:
  update:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Prevent hanging jobs
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Fetch and validate country data
        id: fetch
        run: |
          python -m src.main
        # Consider adding a retry mechanism for transient errors
        continue-on-error: false
          
      - name: Check for changes
        id: check_changes
        run: |
          if [[ -f ".changes_summary.txt" ]]; then
            CHANGES=$(cat .changes_summary.txt)
            echo "changes=${CHANGES}" >> $GITHUB_OUTPUT
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Commit and push changes
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add countries.jsonl
          git commit -m "Update countries data: ${{ steps.check_changes.outputs.changes }}"
          git push
          
      - name: Create GitHub Issue for changes
        if: steps.check_changes.outputs.has_changes == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const changes = '${{ steps.check_changes.outputs.changes }}';
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Country Data Updated - ${new Date().toISOString().split('T')[0]}`,
              body: `The GeoNames country data has been updated with the following changes:\n\n${changes}\n\nAutomatically generated by GitHub Actions.`
            });
            
      - name: Handle Validation Warnings
        if: always()
        run: |
          if [[ -f ".validation_warnings.txt" ]]; then
            echo "::warning::Validation warnings detected. Check the artifact for details."
          fi
        
      - name: Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs-and-backups
          path: |
            backups/
            .validation_warnings.txt
            .changes_summary.txt
          retention-days: 7
